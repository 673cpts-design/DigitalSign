'=↓=↓=↓= MW3 Header Start =↓=↓=↓=↓=↓=↓=↓=↓=↓=↓=↓=↓=[MWTAG1]
' Script Type: MacroWorks 3 Device Script
' Device Name: XK-3 Switch Interface
' Device Description: 3 Button Controller
' Script Name:  Script_1224_X.mw3
' Script Description: Macros for XK-3 Switch Interface [MWTAG19]
' PID: 1224
' Firmware: π3 V 2
' MW3 Version: 15
' Script Language: Visual Basic
' Script Template: Beta 1.0
' Format: Unicode 8
' P.I. Engineering, Inc.
' "The No Slogan Company"
' Williamston, Michigan, USA
' www.xkeys.com
' Start Date: 10/9/2025 3:43:37 PM [MWTAG20]
' Last Update: 10/14/2025 4:18:20 PM [MWTAG21]
' Default Mode: Software
' Image Rotation: 0
' Config Path: XK-3 Switch Interface\ReportConfig_XK3SwitchInterface.xml [MWTAG18]
'=↑=↑=↑= MW3 Header End    =↑=↑=↑=↑=↑=↑=↑=↑=↑=↑=↑=↑=[/MWTAG1]
'=↓=↓=↓= Notes Start =↓=↓=↓=↓=↓=↓=↓=↓=↓=↓=↓=↓=↓=↓=↓=[MWTAG2]
'  User comment notes can go here.
'  CAUTION:
'  DO NOT MODIFY COMMENT LINES OR TAGS
'
'  This file can contain both true VB script code, and special hardware codes to program
'  the X-keys device's internal memory. These hardware codes are auto-generated by the
'  MW3.1 GUI and are indicated by commented lines ending or bracketed with [HWTAG1].
'  DO NOT MODIFY THESE LINES!
'  This can lead to corrupt data written to the device.
'  Additionally other commented lines with [MWTAGx] or other formatting information
'  for the GUI can be found through out this file. Modifying these comments can cause
'  problems in the GUI. Always make back-ups before making any modifications to this file.
'
'  ADDTIONAL NOTES:
'  User comment notes can go here. This area is safe.
'=↑=↑=↑= Notes End   =↑=↑=↑=↑=↑=↑=↑=↑=↑=↑=↑=↑=↑=↑=↑=[MWTAG2]
Imports Microsoft.VisualBasic
Imports System
Imports System.Collections.Generic
Imports System.Diagnostics
Public Class Script
Implements Interfaces.IScript '[MWTAG12]

'=↓=↓=↓= Initialize Variables Start =↓=↓=↓=↓=↓=↓=↓=↓=[MWTAG3]
Dim MW3 As Interfaces.MW3
Dim MyDevice As Integer() = {1224, -1, 1} 'Device Descriptor [MWTAG8]
Dim AppName As String = "" 'Active application name
Dim AppTitle As String = "" 'Active application title
Dim Layer_Red As Integer = 0 'Red,3
    Dim PS_ScriptPath_1 As String = "C:\www\Scripts\refresh.ps1" ' <-- set this to your PowerShell script path
    Dim PS_ScriptPath_2 As String = "C:\www\Scripts\refresh.ps1" ' <-- set this to your PowerShell script path
    Dim PS_ScriptPath_3 As String = "C:\www\Scripts\refresh.ps1" ' <-- set this to your PowerShell script path
'=↑=↑=↑= Initialize Varibles End  =↑=↑=↑=↑=↑=↑=↑=↑=↑=[/MWTAG3]
    '=== Helper: run a PowerShell script hidden and wait for completion ===
    Private Function RunPowerShellHidden(ps1Path As String, Optional extraArgs As String = "") As Integer
        Dim psi As New ProcessStartInfo()
        psi.FileName = "powershell.exe"
        psi.Arguments = "-NoProfile -ExecutionPolicy Bypass -File " & """" & ps1Path & """" & If(String.IsNullOrWhiteSpace(extraArgs), "", " " & extraArgs)
        psi.CreateNoWindow = True
        psi.UseShellExecute = False
        psi.WindowStyle = ProcessWindowStyle.Hidden
        psi.RedirectStandardOutput = False
        psi.RedirectStandardError = False
        Using p = Process.Start(psi)
            p.WaitForExit()
            Return p.ExitCode
        End Using
    End Function
Public Sub Initialize(MW3 As Interfaces.MW3) Implements Interfaces.IScript.Initialize
Me.MW3 = MW3
End Sub

Public Sub ScriptLoad() Implements Interfaces.IScript.ScriptLoad
LEDset()
End Sub

Public Function ScriptUnload() As Boolean Implements Interfaces.IScript.ScriptUnload
End Function

Public Sub SysPowerChange(PowerState As Byte) Implements Interfaces.IScript.SysPowerChange
End Sub
Public Sub ActiveAppChange(ActiveAppTitle As String, ActiveAppName As String) Implements Interfaces.IScript.ActiveAppChange
AppName= ActiveAppName
AppTitle= ActiveAppTitle
End Sub

Public Sub DeviceChange(DevInfo As Integer(), plugged As Boolean) Implements Interfaces.IScript.DeviceChange

End Sub
Public Sub Initializing() Implements Interfaces.IScript.Initializing
End Sub

'=↓=↓=↓= Digital State Change Event Start =↓=↓=↓=↓=↓=↓=↓=[MWTAG4]
Public Sub XKEvent(CID As Integer, State As Boolean, Repeat As Integer, TimeStamp as Long, MessageData As Integer) Implements Interfaces.IScript.XKEvent
Select Case CID 'Button Check Start [MWTAG9]
Case 1001 'SW1
If State AndAlso Repeat = 0 Then 'Pressed [MWTAG10]
                ' Run the PowerShell script silently (hidden) and wait for completion
                RunPowerShellHidden(PS_ScriptPath_1)
Else 'Released [MWTAG11]
End If 'Press-Release [/MWTAG10/MWTAG11]
Case 1002 'SW2
If State AndAlso Repeat = 0 Then 'Pressed [MWTAG10]
                ' Run the PowerShell script silently (hidden) and wait for completion
                RunPowerShellHidden(PS_ScriptPath_2)
Else 'Released [MWTAG11]
End If 'Press-Release [/MWTAG10/MWTAG11]
Case 1003 'SW3
If State AndAlso Repeat = 0 Then 'Pressed [MWTAG10]
                ' Run the PowerShell script silently (hidden) and wait for completion
                RunPowerShellHidden(PS_ScriptPath_3)
Else 'Released [MWTAG11]
End If 'Press-Release [/MWTAG10/MWTAG11]

Case 1004 'NumLock -restricted-
If State 'Pressed [MWTAG10]
Else 'Released [MWTAG11]
End If 'Press-Release [/MWTAG10/MWTAG11]
Case 1005 'CapsLock -restricted-
If State 'Pressed [MWTAG10]
Else 'Released [MWTAG11]
End If 'Press-Release [/MWTAG10/MWTAG11]
Case 1006 'ScrLock -restricted-
If State 'Pressed [MWTAG10]
Else 'Released [MWTAG11]
End If 'Press-Release [/MWTAG10/MWTAG11]
Case 1007 'On Boot -restricted-
If State 'Pressed [MWTAG10]
Else 'Released [MWTAG11]
End If 'Press-Release [/MWTAG10/MWTAG11]
End Select 'Button Check End [/MWTAG9]
If Repeat = 0
LEDset() ' Set the Indicator LEDs
End If
End Sub
'=↑=↑=↑= Digital State Change Event End ↑=↑=↑=↑=↑=↑=↑=↑=↑=[/MWTAG4]
'=↓=↓=↓=Indicator LEDs Start =↓=↓=↓=↓=↓=↓=↓=↓=↓=↓=↓=↓=↓=↓=[MWTAG5]
Public Sub LEDset()
If Layer_Red = 1
MW3.SetLED(MyDevice,3001,0)
MW3.SetLED(MyDevice,3002,1) 'Turn on the Red Indicator LED
Else
MW3.SetLED(MyDevice,3002,0)'Turn off the Red Indicator LED
MW3.SetLED(MyDevice,3001,1)
End if
End Sub
'=↑=↑=↑= Indicator LEDs End ↑=↑=↑=↑=↑=↑=↑=↑=↑=↑=↑=↑=↑=↑=↑=[/MWTAG5]

'=↓=↓=↓=String Data Received Event Start =↓=↓=↓=↓=↓=↓=↓=↓=[MWTAG6]
Public Sub XKStringEvent(CID As Integer, StringData As String, Repeat As Integer, TimeStamp as Long, MessageData As Integer) Implements Interfaces.IScript.XKStringEvent
'String data is sent to this routine, this device does not send string data but this is required for MW3 compatibility.
End Sub
'=↑=↑=↑= String Data Received Event End ↑=↑=↑=↑=↑=↑=↑=↑=↑=[/MWTAG6]
'=↓=↓=↓= Analog Data Received Event Start =↓=↓=↓=↓=↓=↓=↓=↓[MWTAG7]
Public Sub XKAnalogEvent(CID As Integer, AnalogValue As Integer(), Repeat As Integer, TimeStamp as Long, MessageData As Integer) Implements Interfaces.IScript.XKAnalogEvent
'Analog data is sent to this routine, this device does not send analog data but this is required for MW3 compatibility.
End Sub
'=↑=↑=↑= Analog Data Received Event End ↑=↑=↑=↑=↑=↑=↑=↑=↑=[/MWTAG7]
End Class '[/MWTAG12]
